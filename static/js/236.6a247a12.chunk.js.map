{"version":3,"file":"static/js/236.6a247a12.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../node_modules/@mui/material/Typography/Typography.js","components/ContactsLayout/ContactsLayout.jsx","components/ContactForm/ContactForm.module.jsx","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.module.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactsList/ContactsList.module.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContactsState = state => {\n  const normalized = state.filter.toLowerCase().trim();\n\n  return state.contacts.items.filter(item =>\n    item.name.toLowerCase().trim().includes(normalized)\n  );\n};\n\nexport const selectFilteredContacts = state => state.filters;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import PropTypes from 'prop-types';\n\nimport { Container, Typography } from '@mui/material';\n// import {  Title } from './Layout.module';\n\nexport const ContactsLayout = ({ title, children }) => {\n  return (\n    // rgb(232, 246, 228)\n    <Container style={{padding:\"30px\"}} sx={{backgroundColor: 'rgb(56, 60, 73)', width:800}} >\n      <Typography style={{display:\"flex\", justifyContent:\"center\", color:\"white\"}} variant='h2' sx={{fontSize:\"34px\", fontWeight: 700}}>{title}</Typography>\n      {children}\n    </Container>\n  );\n};\n\nContactsLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\npadding: 20px 200px;\n\n\n`\n\nexport const Input = styled.input`\n// width: 350px;\npadding: 14px;\nborder-radius: 8px;\noutline: none;\nborder: none;\n`\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin-top:15px; \nfont-size:20px;\nfont-weight:500;\n`\nexport const ButtonAdd = styled.button`\nfont-size:20px;\nfont-weight:600;\nborder:none;\nborder-radius: 8px;\npadding: 14px;\nmargin-top:40px;\nmargin-right:auto;\nmargin-left:auto;\ncursor: pointer;\nwidth:144px;\n`;\n\n","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { Form, Input, Label, ButtonAdd } from './ContactForm.module';\n\nimport { addContactThunk } from 'redux/contacts/contactsThunks';\nimport { selectContactsState } from 'redux/contacts/selectors';\n\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsState);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const newContact = (name, number) => {\n    return {\n      id: nanoid(),\n      name,\n      number,\n    }\n  };\n\n  const onInputChange = e => {\n\t\tconst { value } = e.currentTarget;\n\t\te.currentTarget.name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  \n    const onFormSubmit = e => {\n        e.preventDefault();\n\n        const currentName = name;\n    \n      if (contacts.some(({ name }) => name === currentName)) {\n        reset();\n            return alert(`You already have ${(currentName).toUpperCase()} in your contacts! Please try to change the name of the contact!`);\n        }\n\t\n        const contact = newContact(name, number);\n        \n        dispatch(addContactThunk(contact))\n        reset();\n    };\n \n  return (\n    <Form onSubmit={onFormSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n         pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" \n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={onInputChange}\n          placeholder='Enter Name..'      \n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={onInputChange}\n          placeholder=\"Enter Number..\"\n        />\n      </Label>\n      <ButtonAdd\n        type=\"submit\">Add</ButtonAdd>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\n// export const Label = styled.label`\n// display: flex;\n// flex-direction: column;\n// padding:0 200px;\n// gap: 1px;\n// margin-top: 10px;\n// font-size: 20px;\n// font-weight: 500;\n// `;\n\n// export const Input = styled.input`\n// width: 96%;\n// border-radius: 8px;\n// outline: none;\n// border: none;\n// padding: 8px;\n// `;\n\nexport const Input = styled.input`\n// width: 350px;\npadding: 14px;\nborder-radius: 8px;\noutline: none;\nborder: none;\n`\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\n\npadding:0 200px;\nmargin-top:15px; \nfont-size:20px;\nfont-weight:500;\n`\nexport const Message = styled.h2`\nfont-size:20px;\nfont-weight:500;\n`\n\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nimport { Label, Input, Message } from './ContactFilter.module';\n\n\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilteredContacts);\n\n  // const label = 'Find contacts by name';\n\n  const handleFilterChange = e => {\n    const searchValue = e.target.value;\n\n    dispatch(setFilterContacts(searchValue));\n  };\n\n\n  return (\n    <Label>\n     <Message>Find contacts by name</Message>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name...\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </Label>\n  );\n};\n\n","import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\npadding: 10px 200px;\nmargin: 0;\n`;\n\n\nexport const ContactItem = styled.li`\ndisplay: flex;\nalign-items: center;\nmargin: 8px;\n`;\n\nexport const ContactName = styled.p`\nmargin: 0;\nfont-size:20px;\nfont-weight:500;\n`;\n\nexport const ContactNumber = styled.span`\nmargin-left: 8px;\nfont-size:20px;\nfont-weight:500;\n`;\n\nexport const Button = styled.button`\nfont-size:20px;\nfont-weight:600;\n\nmargin: 8px 8px 8px auto;\n// margin-left:auto;\npadding: 8px 16px;\n\nborder: none;\nborder-radius: 7px;\ncursor: pointer;\n\n`;\n\n\n\n","import { PropTypes } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContactsState } from 'redux/contacts/selectors';\nimport { deleteContactThunk } from 'redux/contacts/contactsThunks';\n\nimport { List, ContactItem, ContactName, ContactNumber, Button} from './ContactsList.module';\n\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsState);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem key={id}>\n            <ContactName>\n              {name}: <ContactNumber>{number}</ContactNumber>\n            </ContactName>\n            <Button\n              type=\"button\"\n              onClick={() => dispatch(deleteContactThunk(id))}\n              deleting\n            >\n              x\n            </Button>\n          </ContactItem>\n        );\n      })}\n      {/* {isFetching && <Spinner />} */}\n      \n    </List>\n  );\n\n  \n};\n\n\nContactsList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired\n  )\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'hooks/useAuth';\n\nimport { fetchContactsThunk } from 'redux/contacts/contactsThunks';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nimport {  toast } from 'react-toastify';\n\nimport { Spinner } from 'components/Spinner/Spinner';\nimport { ContactsLayout } from 'components/ContactsLayout/ContactsLayout';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const { user } = useAuth();\n  \n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n  \n  useEffect(() => {\n    toast.success(`Congratulations, ${user.name} authorization was successful!`)\n  }, [user.name]);\n\n  \n  return (\n    <>\n      <ContactsLayout title=\"Phonebook\">\n        <ContactForm />\n      </ContactsLayout>\n      <ContactsLayout title=\"Contacts\">\n        <ContactFilter />\n        <ContactsList />\n        {isLoading && <Spinner />}\n      </ContactsLayout>\n    </>\n  )\n    \n};\nexport default ContactsPage;\n"],"names":["selectContactsState","state","normalized","filter","toLowerCase","trim","contacts","items","item","name","includes","selectFilteredContacts","filters","selectIsLoading","isLoading","_excluded","extendSxProp","props","finalSx","inSx","sx","_props$theme$unstable","_props$theme","result","systemProps","otherProps","config","theme","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","prop","splitProps","_objectWithoutPropertiesLoose","Array","isArray","isPlainObject","_extends","getTypographyUtilityClass","slot","generateUtilityClass","componentName","slots","globalStatePrefix","generateUtilityClasses","TypographyRoot","styled","overridesResolver","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","className","component","variantMapping","other","Component","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","ContactsLayout","title","children","Container","style","padding","backgroundColor","width","display","justifyContent","fontSize","fontWeight","Form","Input","Label","ButtonAdd","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","reset","onInputChange","e","value","currentTarget","onSubmit","preventDefault","currentName","some","alert","toUpperCase","contact","id","nanoid","newContact","addContactThunk","autoComplete","type","pattern","required","onChange","placeholder","Message","ContactFilter","searchValue","target","setFilterContacts","List","ContactItem","ContactName","ContactNumber","Button","ContactsList","map","onClick","deleteContactThunk","deleting","user","useAuth","useEffect","fetchContactsThunk","toast","Spinner"],"sourceRoot":""}