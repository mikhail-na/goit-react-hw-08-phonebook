{"version":3,"file":"static/js/602.8ee5db4b.chunk.js","mappings":"+LAKaA,EAAS,SAAC,GAAwB,EAAtBC,MAAuB,IAAhBC,EAAe,EAAfA,SAC9B,OAEE,SAAC,IAAD,CAAWC,MAAO,CAACC,QAAQ,QAASC,GAAI,CAACC,gBAAiB,kBAAmBC,MAAM,IAAKC,OAAO,SAA/F,SAEGN,GAGN,C,iMCVYO,EAAOC,EAAAA,EAAAA,KAAH,gHAQJC,EAASD,EAAAA,EAAAA,GAAH,sIAYNE,EAAOF,EAAAA,EAAAA,EAAH,4JAWJG,EAAQH,EAAAA,EAAAA,MAAH,8GAQLI,EAAYJ,EAAAA,EAAAA,MAAH,0GAQTK,EAAQL,EAAAA,EAAAA,MAAH,4IASLM,EAAMN,EAAAA,EAAAA,IAAH,+EAMHO,EAASP,EAAAA,EAAAA,IAAH,iPAoBNQ,EAASR,EAAAA,EAAAA,OAAH,uMAaNS,EAAOT,EAAAA,EAAAA,KAAH,+KAYJU,GAAeV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,qE,UCEzB,EAxGqB,WACjB,OAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAWXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUX,EAAoB,EAApBA,KAAMY,EAAc,EAAdA,MACpC,OAAQZ,GACJ,IAAK,OACD,OAAOC,EAAQW,GAEnB,IAAK,QACD,OAAOT,EAASS,GAEpB,IAAK,WACD,OAAOP,EAAYO,GAEvB,QACI,OAEX,EAUKC,EAAU,WACZZ,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAGD,OAAO,SAAC5B,EAAA,EAAD,WACH,UAACS,EAAD,CAAM4B,SAhBe,SAAAC,GACrBA,EAAEC,iBAEFR,GAASS,EAAAA,EAAAA,IAAS,CAAEjB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCS,GACH,EAWG,WACI,SAACzB,EAAD,UAAQ,cACR,UAACC,EAAD,WAAM,gCAA4B,kBAAM,0CAIxC,UAACG,EAAD,WAAQ,QAEJ,SAACF,EAAD,CACI4B,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRzC,MAAM,yIACN0C,YAAY,gBACZR,MAAOZ,EACPqB,UAAQ,EACRC,SAAUZ,QAElB,UAAClB,EAAD,WAAQ,UAEJ,SAACF,EAAD,CACI4B,KAAK,QACLlB,KAAK,QACLmB,QAAQ,2EACRzC,MAAM,oLACN0C,YAAY,iBACZC,UAAQ,EACRT,MAAOV,EACPoB,SAAUZ,QAElB,UAAClB,EAAD,WAAQ,YAEJ,UAACC,EAAD,YACI,SAACF,EAAD,CACI2B,KAAMZ,EAAU,OAAS,WACzBN,KAAK,WACLuB,UAAW,GACXJ,QAAQ,2CACRzC,MAAM,wJACN0C,YAAY,oBACZC,UAAQ,EACRT,MAAOR,EACPkB,SAAUZ,KAId,SAAChB,EAAD,CAAQ8B,QApFC,WACrBC,QAAQC,IAAI,WACZnB,GAAYD,EACf,EAiFe,SACKA,GAAU,SAACqB,EAAA,EAAD,KAAiB,SAACC,EAAA,EAAD,aAIxC,SAACjC,EAAD,CAAQuB,KAAK,SAAb,SAAsB,aACtB,UAACtB,EAAD,WAAM,2BAAuB,SAACC,EAAD,CAAcgC,GAAG,SAAjB,SAA0B,mBAGlE,C","sources":["components/Layout/Layout.jsx","pages/RegisterPage/RegisterPage.module.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { Container } from '@mui/material';\n// import {  Title } from './Layout.module';\n\nexport const Layout = ({ title, children }) => {\n  return (\n    // rgb(232, 246, 228)\n    <Container style={{padding:\"30px\"}} sx={{backgroundColor: 'rgb(56, 60, 73)', width:800, height:\"100vh\"}} >\n      {/* <Typography style={{display:\"flex\", justifyContent:\"center\", color:\"white\"}} variant='h2' sx={{fontSize:\"34px\", fontWeight: 700}}>{title}</Typography> */}\n      {children}\n    </Container>\n  );\n};\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Form = styled.form`\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\npadding: 20px 200px;\n\n`;\n\nexport const Header = styled.h1`\ndisplay:block;\ncolor:white;\n\nfont-size:34px;\nfont-weight:700;\n\nmargin-left:auto;\nmargin-right:auto;\n\n`\n\nexport const Text = styled.p`\ndisplay:flex;\njustify-content:center;\ntext-align:center;\nalign-items:center;\nfont-size:18px;\nfont-weight:500;\n\ncolor:white;\n`\n\nexport const Input = styled.input`\n// width: 350px;\npadding: 14px;\nborder-radius: 8px;\noutline: none;\nborder: none;\n`;\n\nexport const PassInput = styled.input`\npadding: 14px;\nborder-radius: 8px;\noutline: none;\nborder: none;\nwidth:340px;\n`; \n\nexport const Label = styled.label`\ndisplay: flex;\nposition: relative;\nflex-direction: column;\nmargin-top:15px; \nfont-size:20px;\nfont-weight:500;\n`\n\nexport const Div = styled.div`\ndisplay:flex;\ntext-align:center;\nalign-items:center\n`;\n\nexport const Toggle = styled.div`\ndisplay: flex;\nposition: absolute;\nright: 14px;\n\nfont-size:18px;\nfont-weight:700;\ncolor: black;\n\ncursor: pointer;\n\ntransition: color 150ms linear;\n\n&:hover,\n&.active {\n    color: rgb(87, 194, 33);\n  }\n`;\n\n\nexport const Button = styled.button`\nfont-size:20px;\nfont-weight:600;\nborder:none;\nborder-radius: 8px;\npadding: 14px;\nmargin-top:40px;\nmargin-right:auto;\nmargin-left:auto;\ncursor: pointer;\nwidth:144px;\n`;\n\nexport const Span = styled.span`\ndisplay: flex;\ntext-align:center;\nalign-items:center;\nfont-size:20px;\nfont-weight:500;\n\nmargin-top:25px;\nmargin-right:auto;\nmargin-left:auto;\n`\n\nexport const LinkToLoggin = styled(NavLink)`\ncolor: rgb(87, 194, 33);\nmargin-left:10px;\n`\n\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {  register } from \"redux/auth/authThunks\";\nimport { EyeInvisibleOutlined, EyeOutlined } from \"@ant-design/icons\";\nimport { Layout } from \"components/Layout/Layout\";\nimport { Form, Label, Div, Toggle, PassInput, Input, Button, Header, Text, Span, LinkToLoggin } from \"./RegisterPage.module\";\n// import { toast } from \"react-toastify\";\n\nconst RegisterPage = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [visible, setVisible] = useState(false);\n    const dispatch = useDispatch();\n\n    // const message = 'Log in to your account';\n    // const message = 'Create an account';\n\n    const handlePassToggle = () => {\n        console.log('clicked');\n        setVisible(!visible)\n    }\n\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name': {\n                return setName(value)\n            }\n            case 'email': {\n                return setEmail(value);\n            }\n            case 'password': {\n                return setPassword(value)\n            }\n            default:\n                return;\n        }\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n\n        dispatch(register({ name, email, password }));\n        setForm();\n    }\n\n\n    const setForm = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    }\n    \n\n    return <Layout>\n        <Form onSubmit={handleFormSubmit}>\n            <Header>Register</Header>\n            <Text>To have access to PHONEBOOK,<br />\n                you need to register yourself first</Text>\n            {/* {message} */}\n            \n            <Label >\n                Name\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    required\n                    onChange={handleChange} />\n            </Label>\n            <Label >\n                E-mail\n                <Input\n                    type=\"email\"\n                    name=\"email\"\n                    pattern=\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.\"\n                    title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n                    placeholder=\"Enter Email...\"\n                    required\n                    value={email}\n                    onChange={handleChange} />\n            </Label>\n            <Label >\n                Password\n                <Div>\n                    <PassInput\n                        type={visible ? \"text\" : \"password\"}\n                        name=\"password\"\n                        maxLength={16}\n                        pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n                        title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n                        placeholder=\"Enter Password...\"\n                        required\n                        value={password}\n                        onChange={handleChange}\n\n                    />\n                    {/* {PassInput.value === 16 && toast.error(\"Password must be at least 16 characters\")} */}\n                    <Toggle onClick={handlePassToggle}>\n                        {visible ? <EyeOutlined/> : <EyeInvisibleOutlined/>}\n                    </Toggle>\n                </Div>\n            </Label>    \n            <Button type=\"submit\">Sign Up</Button>\n            <Span>Do you have an account?<LinkToLoggin to=\"/login\">Sign In</LinkToLoggin></Span>\n        </Form>\n    </Layout>\n};\nexport default RegisterPage;"],"names":["Layout","title","children","style","padding","sx","backgroundColor","width","height","Form","styled","Header","Text","Input","PassInput","Label","Div","Toggle","Button","Span","LinkToLoggin","NavLink","useState","name","setName","email","setEmail","password","setPassword","visible","setVisible","dispatch","useDispatch","handleChange","target","value","setForm","onSubmit","e","preventDefault","register","type","pattern","placeholder","required","onChange","maxLength","onClick","console","log","EyeOutlined","EyeInvisibleOutlined","to"],"sourceRoot":""}